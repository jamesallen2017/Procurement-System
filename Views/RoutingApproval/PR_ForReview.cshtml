@model PO_PurchasingUI.Models.SupplierModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@{
    List<SelectListItem> TypeOfVat = new List<SelectListItem>();
    TypeOfVat.Add(new SelectListItem
    {
        Text = "Without VAT",
        Value = "0",
    });
    TypeOfVat.Add(new SelectListItem
    {
        Text = "With VAT",
        Value = "1",
    });
}
<input type="hidden" value="105" id="ModuleAccess" />

<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-7">
            <h1 class="page-heading">
                PURCHASE REQUISITION FOR REVIEW
            </h1>
        </div>
        <div class="col-sm-5 text-right hidden-xs">
            <ol class="breadcrumb push-10-t">
                <li>ROUTING APPROVAL</li>
                <li><a class="link-effect" href="">PR FOR REVIEW</a></li>
            </ol>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<!-- Forms Row -->
<div class="content">
    <div class="block animated fadeIn">
        <div class="block-header">
            <ul class="block-options">
                <li>
                    @Html.DisplayFor(supplier => supplier.PRNumber, new { @class = "form-control", disabled = "disabled", autocomplete = "off" })

                </li>
            </ul>
            <h4 class="block-title">Date : @DateTime.Now.ToShortDateString()</h4>
        </div>

        @if (ViewBag.RequisitionMonitoring == true)
        {
            <div class="block-content">
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel-body table-responsive">
                            <table class="table table-striped table-borderless text-center js-dataTable-full-pagination">
                                <thead>
                                    <tr>
                                        <th style="font-size: 12px;" class="text-left">View</th>
                                        <th style="font-size: 12px;" class="text-left">Print</th>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-2 text-left">PR No.</th>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-3 text-left">Project Description</th>
                                        <th style="font-size: 12px;" class="text-left">Canvassed by</th>
                                        <th style="font-size: 12px;" class="text-left">Responsible</th>
                                        <th style="font-size: 12px;" class="text-left">Entry Date</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var item in Model.PopulateRoutingApproval)
                                    {
                                    <tr>
                                        <td style="font-size: 12px;" class="text-left"><a class="btn btn-primary" href="@Url.Action("GetPR_ForReviewDetails","Home", new { @id = item.PRReferenceNo})"><span class="fa fa-eye"></span></a></td>
                                        <td style="font-size: 12px;" class="text-left"><a class="btn btn-default" href="@Url.Action("PurchaseRequisitionReport", "Report", new { @id = item.PRReferenceNo })" target="_blank"><span class="fa fa-print"></span></a></td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.PRNumber)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.ProjectDescription)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.CanvessedBy)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.FullNameResponsible)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.EntryDate)</td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (ViewBag.RequisitionMonitoring == false)
        {

            using (Html.BeginForm("UpdateUsePRInformation", "Main", FormMethod.Post, new { @id = "RequestPRValidation", @class = "js-validation-material form-horizontal push-10-t", role = "form" }))
            {
            <div class="block-content block-content-narrow">

                <input type="text" id="HiddenPreview" style="display:none;" />
                @Html.HiddenFor(a => a.FormStatus)
                @Html.HiddenFor(a => a.ReviewerID)
                @Html.HiddenFor(a => a.PRNumber)
                @Html.HiddenFor(a => a.PRReferenceNo)

                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.EditorFor(client => client.PRDateNeeded, new { htmlAttributes = new { @class = "js-datepicker form-control", autocomplete = "off", maxlength = "10", @readonly = "readonly", disabled = "true" } })
                                <label for="DateNeeded">Date Needed</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div id="DeliveryDiv" class="form-material form-material-primary floating">
                                @Html.TextAreaFor(supplier => supplier.ProjectDescription, new { @class = "form-control", autocomplete = "off", style = "margin: 0px; width: 100%; resize:vertical; height: 38px;", disabled = "true" })
                                <label for="ProjectDescription">Project Description</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(supplier => supplier.ApproverID, new SelectList(Model.Approver, "Value", "Text", "73"), new { @class = "js-select2 form-control", style = "width:100%;", disabled = "true" })
                                <label for="ApproverID">Approver</label>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(supplier => supplier.EndorserID, Model.Endorser, "", new { @class = "js-select2 form-control", style = "width:100%;", disabled = "true" })
                                <label for="EndorserID">Endorser</label>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(supplier => supplier.CanvessedBy, Model.ListAllUser, "", new { @class = "js-select2 form-control", style = "width:100%;", disabled = "true" })
                                <label for="CanvessedBy">Canvassed By:</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">

                    </div>
                </div>
            </div>

                <div class="block-content">
                    <div class="panel-body table-responsive" style="overflow-x:auto;">
                        <table id="TableSupplierItemList" class="table table-striped" cellpadding="0" cellspacing="0">
                            <thead>
                                <tr>
                                    <th class="col-md-1"></th>
                                    <th class="col-md-1 text-center" style="font-size: 12px;">Particular</th>
                                    <th class="col-md-1 text-center" style="font-size: 12px;">Unit</th>
                                    <th class="col-md-1 text-center" style="font-size: 12px;">Qty</th>
                                    <th class="col-md-1 text-center" style="font-size: 12px;">
                                        <div class="form-material form-material-primary ">
                                            @Html.DropDownListFor(supplier => supplier.SupplierID_One, Model.SupplierName, "", new { @class = "js-select2 form-control", style = "text-overflow: ellipsis; width: 250px;", autocomplete = "off", disabled = "true" })
                                            <label for="SupplierID_One">Select Supplier 1</label>
                                        </div>
                                    </th>
                                    <th class="col-md-1 text-center" style="font-size: 12px; ">
                                        <div class="form-material form-material-primary ">
                                            @Html.DropDownListFor(supplier => supplier.SupplierID_Two, Model.SupplierName, "", new { @class = "js-select2 form-control", style = "text-overflow: ellipsis; width: 250px;", autocomplete = "off", disabled = "true" })
                                            <label for="SupplierID_Two">Select Supplier 2</label>
                                        </div>
                                    </th>
                                    <th class=" col-md-1text-center" style="font-size: 12px;">
                                        <div class="form-material form-material-primary ">
                                            @Html.DropDownListFor(supplier => supplier.SupplierID_Three, Model.SupplierName, "", new { @class = "js-select2 form-control", style = "text-overflow: ellipsis; width: 250px;", autocomplete = "off", disabled = "true" })
                                            <label for="SupplierID_Three">Select Supplier 3</label>
                                        </div>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int rowNo = 1; }
                                @foreach (var item in Model.PopulateAllItemList)
                                {

                                    <tr id="mainrow" style="background-color:white">

                                        <td>
                                            <div class="form-group">
                                                @(rowNo++)
                                                </div>
                                        </td>

                                        <td class="col-xs-3">
                                            <div class="form-group">
                                                <div class="form-material form-material-primary floating">
                                                    @Html.DropDownListFor(supplier => item.ParticularName, new SelectList(Model.Particular, "Value", "Text", item.ParticularName), new { @class = "pc js-select2 form-control", disabled = "true", style = "width:100%; text-overflow: ellipsis;" })
                                                    <br />

                                                    @Html.TextAreaFor(supplier => item.itemDescription, new { @class = "form-control", style = "margin:0px; width: 100%; height: 34px; resize:vertical;", disabled = "true" })
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-1">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.TextBoxFor(supplier => item.ItemMeasure, new { @class = "form-control", autocomplete = "off", style = "text-align:center", disabled = "true" })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-1">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.TextBoxFor(supplier => item.Qty, new { @class = "form-control", onkeypress = "validate(event)", autocomplete = "off", style = "text-align:right", maxlength = "10", disabled = "true" })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-2">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.EditorFor(supplier => item.DisplayAmount_One, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true" } })
                                                        <br />
                                                        <br />
                                                        @Html.EditorFor(supplier => item.DisplayTotalAmount_One, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true", placeholder = "Total Amount" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-2">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.EditorFor(supplier => item.DisplayAmount_Two, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true" } })
                                                        <br />
                                                        <br />
                                                        @Html.EditorFor(supplier => item.DisplayTotalAmount_Two, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true", placeholder = "Total Amount" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="col-xs-2">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.EditorFor(supplier => item.DisplayAmount_Three, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true" } })
                                                        <br />
                                                        <br />
                                                        @Html.EditorFor(supplier => item.DisplayTotalAmount_Three, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true", placeholder = "Total Amount" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                            <tfoot>

                                <tr style="background-color:#eeeeee;">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td class="text-center"><strong class="text-black-op">Overall Total</strong></td>
                                    <td> @Html.EditorFor(client => client.DisplayGrandTotal_One, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "border:none; background-color#eeeeee; text-align:right", onkeypress = "validate(event)" } })</td>
                                    <td> @Html.EditorFor(client => client.DisplayGrandTotal_Two, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "border:none; background-color:#eeeeee; text-align:right", onkeypress = "validate(event)" } })</td>
                                    <td> @Html.EditorFor(client => client.DisplayGrandTotal_Three, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "border:none; background-color:#eeeeee; text-align:right", onkeypress = "validate(event)" } })</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div id="DeliveryDiv" class="form-material form-material-primary floating">
                                @Html.TextAreaFor(supplier => supplier.RejectRemarks, new { @class = "form-control", id = "RejectRemarks", maxlength = "300", autocomplete = "off", style = "margin: 0px; width: 100%; height: 38px;" })
                                <label for="RejectRemarks">Reject Remarks</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-xs-12">
                            <input class="btn btn-sm btn-danger  pull-right" type="button" onclick="return window.history.back();" style="margin-left:5px;" value="Back" />
                            <input class="btn btn-sm btn-primary  pull-right" type="button" id="btnPRConfirm" onclick="PRRouting(this)" style="margin-left:5px;" value="Confirm" />
                            <input class="btn btn-sm btn-dark  pull-right" type="button" id="btnPRReject" disabled="disabled" onclick="PRRejected(this)" value="Reject" />
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>


@section scripts
{

<script>
    $("#btnPRConfirm").prop('disabled', false);
    $("#btnReject").prop('disabled', true);

    $("#RejectRemarks").on('keyup', function () {

        var RejectRemarks = $.trim($('#RejectRemarks').val());

        if (RejectRemarks == null || RejectRemarks == "") {
            $("#btnPRConfirm").prop('disabled', false);
            $("#btnPRReject").prop('disabled', true);
        }
        else {
            $("#btnPRConfirm").prop('disabled', true);
            $("#btnPRReject").prop('disabled', false);
        }
    })
    </script>

<script>

    function PRRouting(button) {

        var PRReferenceNo = $("#PRReferenceNo").val();
        var PRNumber = $("#PRNumber").val();

        var OldStatus = $("#FormStatus").val();
        var EndorserID = $("#EndorserID").val();
        var ApproverID = $("#ApproverID").val();
        var ReviewerID = $("#ReviewerID").val();
        

        var StatusNotification = "";
        var Action = "";

        if (OldStatus == "FOR ENDORSEMENT") {
            StatusNotification = "Endorsed";
        }
        else if (OldStatus == "FOR REVIEW") {
            StatusNotification = "Reviewed";
        }
        else {
            StatusNotification = "Approved";
        }


        swal({
            title: "Are you sure?",
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: '#5F69E0',
            confirmButtonText: 'Yes',
            cancelButtonText: "No",
            closeOnConfirm: false, width: 420,
            closeOnCancel: false,
            allowOutsideClick: false
        }).then((isConfirm) => {
            if (isConfirm) {

                var action = '/Main/UpdatePRForRoutingApproval';
                $.ajax({
                    url: action,
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ PRReferenceNo: PRReferenceNo, FormStatus: OldStatus, EndorserID: EndorserID, ApproverID: ApproverID }),
                    dataType: "json",
                    success: function (data) {

                        if (data == 0) {
                            sweetAlert("Please contact our administrator for assistance.", "", "error");
                            return false;
                        }
                        else if (data == "REJECTED") {
                            sweetAlert("This " + PRNumber + " is already Rejected.", "", "error");
                            return false;
                        }
                        else if (data == "FOR APPROVAL") {
                            sweetAlert("This " + PRNumber + " is already for approval.", "", "error");
                            return false;
                        }
                        else if (data == "APPROVED") {
                            sweetAlert("This " + PRNumber + " is already approved.", "", "error");
                            return false;
                        }
                        else {
                            swal
                                ({
                                    title: "Success",
                                    text: "" + PRNumber + " successfully " + StatusNotification + ".",
                                    type: "success"
                                }).then(function () {
                                    // Redirect the user

                                    App.loader('show');
                                    setTimeout(function () {
                                        App.loader('hide');
                                        if (OldStatus == "FOR ENDORSEMENT") {

                                            var $this = $("#btnPRConfirm");
                                            $this.button('loading');
                                            setTimeout(function () {
                                                $this.button('reset');
                                            }, 10000);

                                            window.location.href = "/Report/PurchaseRequisitionReport/";
                                        }

                                        else if (OldStatus == "FOR REVIEW") {

                                            var $this = $("#btnPRConfirm");
                                            $this.button('loading');
                                            setTimeout(function () {
                                                $this.button('reset');
                                            }, 10000);

                                            window.location.href = "/Report/PurchaseRequisitionReport/";                                            
                                        }
                                        else {
                                            window.location.href = '/Home/PR_FORAPPROVAL/';
                                        }
                                    }, 1000);

                                });
                        }
                    }
                });
            }
        })
    }



    function PRRejected(button) {

        var RejectRemarks = $.trim($('#RejectRemarks').val());

        if (RejectRemarks == null || RejectRemarks == "") {

            return false;
        }

        else {

            var PRReferenceNo = $("#PRReferenceNo").val();
            var PRNumber = $("#PRNumber").val();


            var OldStatus = $("#FormStatus").val();
            //var EndorserID = $("#EndorserID").val();
            //var ApproverID = $("#ApproverID").val();
            //var StatusNotification = "";
            //var Action = "";
            //if (OldStatus == "FOR ENDORSEMENT") {
            //    StatusNotification = "Endorsed";
            //}
            //else {
            //    StatusNotification = "Approved";
            //}

            swal({
                title: "Are you sure?",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#5F69E0',
                confirmButtonText: 'Yes',
                cancelButtonText: "No",
                closeOnConfirm: false, width: 420,
                closeOnCancel: false,
                allowOutsideClick: false
            }).then((isConfirm) => {
                if (isConfirm) {

                    var action = '/Main/UpdatePRRejected';
                    $.ajax({
                        url: action,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ PRReferenceNo: PRReferenceNo, FormStatus: OldStatus, RejectRemarks: RejectRemarks }),
                        dataType: "json",
                        success: function (data) {

                            if (data == 0) {
                                sweetAlert("Please contact our administrator for assistance.", "", "error");
                                return false;
                            }
                            else if (data == "REJECTED") {
                                sweetAlert("This " + PRNumber + " is already rejected.", "", "error");
                                return false;
                            }
                            else if (data == "FOR APPOVAL") {
                                sweetAlert("This " + PRNumber + " is already for approval.", "", "error");
                                return false;
                            }
                            else if (data == "APPROVED") {
                                sweetAlert("This " + PRNumber + " is already approved.", "", "error");
                                return false;

                            }
                            else {
                                swal
                                    ({
                                        title: "Success",
                                        text: "" + PRNumber + " successfully Rejected",
                                        type: "success"
                                    }).then(function () {
                                        // Redirect the user
                                        App.loader('show');
                                        setTimeout(function () {
                                            App.loader('hide');
                                            if (OldStatus == "FOR ENDORSEMENT") {
                                                window.location.href = '/Home/PR_FORENDORSEMENT/';
                                            }
                                            else {
                                                window.location.href = '/Home/PR_FORAPPROVAL/';
                                            }
                                        }, 1000);
                                    });
                            }
                        }
                    });
                }
            })
        }


    }

    </script>

}
