@model PO_PurchasingUI.Models.SupplierModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@{
    List<SelectListItem> TypeOfVat = new List<SelectListItem>();
    TypeOfVat.Add(new SelectListItem
    {
        Text = "Without VAT",
        Value = "0",
    });
    TypeOfVat.Add(new SelectListItem
    {
        Text = "With VAT",
        Value = "1",
    });
}
<input type="hidden" value="12" id="ModuleAccess" />

<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-7">
            <h1 class="page-heading">
                PURCHASE REQUISITION
            </h1>
        </div>
        <div class="col-sm-5 text-right hidden-xs">
            <ol class="breadcrumb push-10-t">
                <li>PURCHASE REQUISITION</li>
                <li><a class="link-effect" href="">EDIT</a></li>
            </ol>
        </div>
    </div>
</div>
<!-- END Page Header -->
<!-- Page Content -->
<!-- Forms Row -->
<div class="content">
    <div class="block animated fadeIn">
        <div class="block-header">
            <ul class="block-options">
                <li>
                    @Html.DisplayFor(supplier => supplier.PRNumber, new { @class = "form-control", disabled = "disabled", autocomplete = "off" })

                </li>
            </ul>
            <h4 class="block-title">Date : @DateTime.Now.ToShortDateString()</h4>
        </div>

        @if (ViewBag.RequisitionMonitoring == true)
        {
            <div class="block-content">
                <div class="row">

                    <div class="col-md-12">
                        <div class="panel-body table-responsive">
                            <table class="table table-striped table-borderless text-center js-dataTable-full-pagination">
                                <thead>
                                    <tr>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-1 text-left">Edit</th>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-1 text-left">Print</th>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-2 text-left">PR No.</th>
                                        <th style="font-size: 12px;" class="col-xs-4 col-sm-4 text-left">Project Description</th>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-2 text-left">Status</th>
                                        <th style="font-size: 12px;" class="col-xs-1 col-sm-2 text-left">Entry Date</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var item in Model.PopulateAllEditPurchaseRequisition)
                                    {
                                        <tr>
                                            <td style="font-size: 12px;" class="text-left"><a class="btn btn-primary" href="@Url.Action("GetPurchaseRequisition","Home", new { @id = item.PRReferenceNo})"><span class="fa fa-edit"></span></a></td>
                                            <td style="font-size: 12px;" class="text-left"><a class="btn btn-default" href="@Url.Action("PurchaseRequisitionReport", "Report", new { @id = item.PRReferenceNo })" target="_blank"><span class="fa fa-print"></span></a></td>
                                            <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.PRNumber)</td>
                                            <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.ProjectDescription)</td>
                                            @if (item.FormStatus == "FOR ENDORSEMENT")
                                            {
                                                <td style="font-size: 12px;" class="text-left"><span class="label label-warning">@Html.DisplayFor(Modelitem => item.FormStatus)</span></td>
                                            }
                                            else if (item.FormStatus == "FOR REVIEW")
                                            {
                                                <td style="font-size: 12px;" class="text-left"><span class="label label-primary">@Html.DisplayFor(Modelitem => item.FormStatus)</span></td>
                                            }
                                            else if (item.FormStatus == "FOR APPROVAL")
                                            {
                                                <td style="font-size: 12px;" class="text-left"><span class="label label-warning" style="background: #c7b7e4">@Html.DisplayFor(Modelitem => item.FormStatus)</span></td>
                                            }
                                            else if (item.FormStatus == "REJECTED")
                                            {
                                                <td style="font-size: 12px;" class="text-left"><span class="label label-danger">@Html.DisplayFor(Modelitem => item.FormStatus)</span></td>
                                            }
                                            else if (item.FormStatus == "APPROVED")
                                            {
                                                <td style="font-size: 12px;" class="text-left"><span class="label label-success">@Html.DisplayFor(Modelitem => item.FormStatus)</span></td>
                                            }
                                            <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.EntryDate)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (ViewBag.RequisitionMonitoring == false)
        {

            using (Html.BeginForm("UpdateUsePRInformation", "Main", FormMethod.Post, new { @id = "RequestPRValidation", @class = "js-validation-material form-horizontal push-10-t", role = "form" }))
            {
                <div class="block-content block-content-narrow">

                    <input type="text" id="HiddenPreview" style="display:none;" />
                    @Html.HiddenFor(a => a.PRNumber)
                    @Html.HiddenFor(a => a.PRReferenceNo)

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="form-material form-material-primary floating">
                                    @Html.EditorFor(client => client.PRDateNeeded, new { htmlAttributes = new { @class = "js-datepicker form-control", autocomplete = "off", maxlength = "10", @readonly = "readonly" } })
                                    <label for="DateNeeded">Date Needed</label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-12">
                                <div id="DeliveryDiv" class="form-material form-material-primary floating">
                                    @Html.TextAreaFor(supplier => supplier.ProjectDescription, new { @class = "form-control", autocomplete = "off", style = "margin: 0px; width: 100%; resize:vertical; height: 38px;" })
                                    <label for="ProjectDescription">Project Description</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="form-material form-material-primary floating">
                                    @Html.DropDownListFor(supplier => supplier.ApproverID, new SelectList(Model.Approver, "Value", "Text", "73"), new { @class = "js-select2 form-control", style = "width:100%;", disabled = "true" })
                                    <label for="ApproverID">Approver</label>
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="form-material form-material-primary floating">
                                    @Html.DropDownListFor(supplier => supplier.EndorserID, Model.Endorser, "", new { @class = "js-select2 form-control", style = "width:100%;" })
                                    <label for="EndorserID">Endorser</label>
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="form-material form-material-primary floating">
                                    @Html.DropDownListFor(supplier => supplier.CanvessedBy, Model.ListAllUser, "", new { @class = "js-select2 form-control", style = "width:100%;" })
                                    <label for="CanvessedBy">Canvassed By</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">

                        </div>
                    </div>
                </div>

                <div class="block-content">
                    <div class="panel-body table-responsive" style="overflow-x:auto;">
                        <table id="TableSupplierItemList" class="table table-striped" cellpadding="0" cellspacing="0">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th style="font-size: 12px;" class="text-center">Particular</th>
                                    <th style="font-size: 12px;" class="text-center">Unit</th>
                                    <th style="font-size: 12px;" class="text-center">Qty</th>
                                    <th style="font-size: 12px;" class="text-center">
                                        <div class="form-material form-material-primary ">
                                            @Html.DropDownListFor(supplier => supplier.SupplierID_One, Model.SupplierName, "", new { @class = "js-select2 form-control", style = " text-overflow: ellipsis;", autocomplete = "off" })
                                            <label for="SupplierID_One">Select Supplier 1</label>
                                        </div>
                                    </th>
                                    <th style="font-size: 12px;" class="text-center">
                                        <div class="form-material form-material-primary">
                                            @Html.DropDownListFor(supplier => supplier.SupplierID_Two, Model.SupplierName, "", new { @class = "js-select2 form-control", style = "text-overflow: ellipsis;", autocomplete = "off" })
                                            <label for="SupplierID_Two">Select Supplier 2</label>
                                        </div>
                                    </th>
                                    <th style="font-size: 12px;" class="text-center">
                                        <div class="form-material form-material-primary">
                                            @Html.DropDownListFor(supplier => supplier.SupplierID_Three, Model.SupplierName, "", new { @class = "js-select2 form-control", style = "text-overflow: ellipsis;", autocomplete = "off" })
                                            <label for="SupplierID_Three">Select Supplier 3</label>
                                        </div>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.PopulateAllItemList)
                                {
                                    <tr id="mainrow" style="background-color:white">
                                        <td>  <a id="add" value="Add" class="btn btn-success"><span class="fa fa-plus"></span> </a>  <a id="Remove" value="Remove" class="btn btn-danger"><span class="fa fa-close"></span> </a></td>
                                        <td class="col-xs-3">
                                            <div class="form-group">
                                                <div class="form-material form-material-primary floating">
                                                    @Html.DropDownListFor(supplier => item.ParticularName, new SelectList(Model.Particular, "Value", "Text", item.ParticularName), new { @class = "pc js-select2 form-control", style = "width: 100%; text-overflow: ellipsis;" })
                                                    <br />

                                                    @Html.TextAreaFor(supplier => item.itemDescription, new { @class = "form-control", style = "margin:0px; width: 100%; height: 34px; resize:vertical;" })
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-1">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.TextBoxFor(supplier => item.ItemMeasure, new { @class = "form-control", autocomplete = "off", style = "text-align:center", disabled = "disabled" })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-1">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.TextBoxFor(supplier => item.Qty, new { @class = "form-control", onkeypress = "validate(event)", autocomplete = "off", style = "text-align:right", maxlength = "10" })
                                                    </div>
                                                </div>
                                                <strong class="text-black-op" style=" font-size:13px; position: relative; top:20px; left:15px">Total Amount</strong>
                                            </div>
                                        </td>

                                        <td class="col-xs-2">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.EditorFor(supplier => item.DisplayAmount_One, new { htmlAttributes = new { @class = "form-control", onkeypress = "validate(event)", style = "text-align:right", autocomplete = "off" } })
                                                        <br />
                                                        <br />
                                                        @Html.EditorFor(supplier => item.DisplayTotalAmount_One, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true", placeholder = "Total Amount" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>

                                        <td class="col-xs-2">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.EditorFor(supplier => item.DisplayAmount_Two, new { htmlAttributes = new { @class = "form-control", onkeypress = "validate(event)", style = "text-align:right", autocomplete = "off" } })
                                                        <br />
                                                        <br />
                                                        @Html.EditorFor(supplier => item.DisplayTotalAmount_Two, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true", placeholder = "Total Amount" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="col-xs-2">
                                            <div class="form-group">
                                                <div class="col-sm-12">
                                                    <div class="form-material form-material-primary floating">
                                                        @Html.EditorFor(supplier => item.DisplayAmount_Three, new { htmlAttributes = new { @class = "form-control", onkeypress = "validate(event)", style = "text-align:right", autocomplete = "off" } })
                                                        <br />
                                                        <br />
                                                        @Html.EditorFor(supplier => item.DisplayTotalAmount_Three, new { htmlAttributes = new { @class = "form-control", style = "text-align:right", autocomplete = "off", disabled = "true", placeholder = "Total Amount" } })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                            <tfoot>

                                <tr style="background-color:#eeeeee;">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td class="text-center" style=" font-size:13px;"><strong class="text-black-op">Overall Total</strong></td>
                                    <td> @Html.EditorFor(client => client.DisplayGrandTotal_One, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "border:none; background-color:##f5f5f5; text-align:right;cursor:default;font-weight:bold", onkeypress = "validate(event)" } })</td>
                                    <td> @Html.EditorFor(client => client.DisplayGrandTotal_Two, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "border:none; background-color:##f5f5f5; text-align:right;cursor:default;font-weight:bold", onkeypress = "validate(event)" } })</td>
                                    <td> @Html.EditorFor(client => client.DisplayGrandTotal_Three, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "border:none; background-color:##f5f5f5; text-align:right;cursor:default;font-weight:bold", onkeypress = "validate(event)" } })</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <div class="form-group">
                        <div class="col-xs-12">
                            @if (Session["UserRole"].ToString() == "5")
                            {
                                <input class="btn btn-sm btn-dark  pull-right" type="submit" style="margin-left:5px;" id="btnPreviewPR" onclick="DoPreview()" value="Preview" />
                                <a class="btn btn-sm btn-danger pull-right" href="@Url.Action("EditPurchaseRequisition","Home")">Back</a>
                            }
                            else
                            {
                                <input class="btn btn-sm btn-primary  pull-right" type="submit" style="margin-left:5px;" id="btnSavePR" disabled="disabled" onclick="DoSave()" value="Submit" />
                                <input class="btn btn-sm btn-dark  pull-right" type="submit" style="margin-left:5px;" id="btnPreviewPR" onclick="DoPreview()" value="Preview" />
                                <a class="btn btn-sm btn-danger pull-right" href="@Url.Action("EditPurchaseRequisition","Home")">Back</a>
                            }

                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>


@section scripts
{

    <script>
        function DoPreview() {
            $("#HiddenPreview").val("PREVIEW");
        }
        function DoSave() {
            $("#HiddenPreview").val("SAVED");
        }
        $("#SupplierID_One").on('change', function () {
            $("#SupplierID_One").prop('disabled', true);
            var SupplierOne = $(this).val();

            setTimeout(function () {
                $("#SupplierID_One").prop('disabled', false);
            }, 2000);

            if (SupplierOne == "") {
                $("#TableSupplierItemList tbody tr").each(function () {

                    var row = $(this);
                    $("#item_DisplayAmount_One", row).prop('disabled', true);
                    $("#item_DisplayAmount_One", row).val("")
                    $("#item_DisplayTotalAmount_One", row).val("0.00")
                    $("#DisplayGrandTotal_One").val("0.00")

                })
           
            }
            else {
                $("#TableSupplierItemList tbody tr").each(function () {

                    var row = $(this);
                    $("#DisplayAmount_One", row).prop('disabled', false);


                })
            }
        })

        $("#SupplierID_Two").on('change', function () {
            $("#SupplierID_Two").prop('disabled', true);
            var SupplierOne = $(this).val();

            setTimeout(function () {
                $("#SupplierID_Two").prop('disabled', false);
            }, 2000);

            if (SupplierOne == "") {
                $("#TableSupplierItemList tbody tr").each(function () {

                    var row = $(this);
                    $("#item_DisplayAmount_Two", row).prop('disabled', true);
                    $("#item_DisplayAmount_Two", row).val("")
                    $("#item_DisplayTotalAmount_Two", row).val("0.00")
                    $("#DisplayGrandTotal_Two").val("0.00")

                })
            
            }
            else {
                $("#TableSupplierItemList tbody tr").each(function () {

                    var row = $(this);
                    $("#item_DisplayAmount_Two", row).prop('disabled', false);


                })
            }
        })

        $("#SupplierID_Three").on('change', function () {
            $("#SupplierID_Three").prop('disabled', true);
            var SupplierOne = $(this).val();

            setTimeout(function () {
                $("#SupplierID_Three").prop('disabled', false);
            }, 2000);

            if (SupplierOne == "") {
                $("#TableSupplierItemList tbody tr").each(function () {

                    var row = $(this);
                    $("#item_DisplayAmount_Three", row).prop('disabled', true);
                    $("#item_DisplayAmount_Three", row).val("")
                    $("#item_DisplayTotalAmount_Three", row).val("0.00")
                    $("#DisplayGrandTotal_Three").val("0.00")

                })
             
            }
            else {
                $("#TableSupplierItemList tbody tr").each(function () {

                    var row = $(this);
                    $("#item_DisplayAmount_Three", row).prop('disabled', false);


                })
            }
        })

        $('#TableSupplierItemList').on('change', '#item_ParticularName', function () {

            var count = $(this).closest("tr");
            var ItemName = $("#item_ParticularName", count).val();
            var POCReferenceNo = $("#POCReferenceNo").val();

            $("#item_ParticularName", count).prop('disabled', true);

            setTimeout(function () {
                $("#item_ParticularName", count).prop('disabled', false);
            }, 2000);

            $.ajax({
                url: '/Home/GetItemDetails',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    value: ItemName,
                    POCReferenceNo: POCReferenceNo,
                }),

                dataType: "json",
                success: function (data) {

                    $("#item_ItemMeasure", count).val(data.ItemMeasure);
                    $("#item_Qty", count).attr('placeholder', data.Qty);
                    $("#item_itemDescription", count).val(data.itemDescription); // Render data into textbox
                }
            });

        })

        $("input[id*='item_Qty']").on('keyup', function () {
            var qty = $(this).val().replace(/,/g, '');
            var row = $(this).closest("tr");
            var DisplayAmount_One = $("input[id*='item_DisplayAmount_One']", row).val().replace(/,/g, '');
            var DisplayAmount_Two = $("input[id*='item_DisplayAmount_Two']", row).val().replace(/,/g, '');
            var DisplayAmount_Three = $("input[id*='item_DisplayAmount_Three']", row).val().replace(/,/g, '');



            if (qty != "" && DisplayAmount_One != "") {
                var subTotal = parseInt(qty) * parseFloat(DisplayAmount_One);

                if (!isNaN(subTotal)) {

                    var i = (subTotal).toFixed(2).toString();
                    var Comma2 = i.toString().split(".");
                    Comma2[0] = Comma2[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    //$("input[id*='TotalAmount']", row).val(Comma2.join("."));
                    $("#item_DisplayTotalAmount_One", row).val(Comma2.join("."));
                }
                else {
                    $("input[id*='item_DisplayGrandTotal_One']").val((0).toFixed(2).toString());
                    $("input[id*='item_DisplayTotalAmount_One']", row).val((0).toFixed(2).toString());
                }

            }
            else {

                $("input[id*='item_DisplayGrandTotal_One']").val((0).toFixed(2).toString());
                $("input[id*='item_DisplayTotalAmount_One']", row).val((0).toFixed(2).toString());

            }

            if (qty != "" && DisplayAmount_Two != "") {
                var subTotal = parseInt(qty) * parseFloat(DisplayAmount_Two);

                if (!isNaN(subTotal)) {

                    var i = (subTotal).toFixed(2).toString();
                    var Comma2 = i.toString().split(".");
                    Comma2[0] = Comma2[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    //$("input[id*='TotalAmount']", row).val(Comma2.join("."));
                    $("#item_DisplayTotalAmount_Two", row).val(Comma2.join("."));
                }


            }
            else {

                $("input[id*='DisplayGrandTotal_Two']").val((0).toFixed(2).toString());
                $("input[id*='item_DisplayTotalAmount_Two']", row).val((0).toFixed(2).toString());
            }




            if (qty != "" && DisplayAmount_Three != "") {
                var subTotal = parseInt(qty) * parseFloat(DisplayAmount_Three);

                if (!isNaN(subTotal)) {

                    var i = (subTotal).toFixed(2).toString();
                    var Comma2 = i.toString().split(".");
                    Comma2[0] = Comma2[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    //$("input[id*='TotalAmount']", row).val(Comma2.join("."));
                    $("#item_DisplayTotalAmount_Three", row).val(Comma2.join("."));
                }


            }
            else {

                $("input[id*='DisplayGrandTotal_Three']").val((0).toFixed(2).toString());
                $("input[id*='item_DisplayTotalAmount_Three']", row).val((0).toFixed(2).toString());
            }



            var TotalAmounts1 = 0;
            // $("#VAT").each(function () {
            $("input[id*='item_DisplayTotalAmount_One']").each(function () {
                TotalAmounts1 = TotalAmounts1 + parseFloat($(this).val().replace(/,/g, ''));
            });


            var GrandTOtalAmount = parseFloat(TotalAmounts1);
            var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
            var Comma1 = GrandTOtalAmount.toString().split(".");
            Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            $("#DisplayGrandTotal_One").val(Comma1.join("."));

            var TotalAmounts2 = 0;
            // $("#VAT").each(function () {
            $("input[id*='item_DisplayTotalAmount_Two']").each(function () {
                TotalAmounts2 = TotalAmounts2 + parseFloat($(this).val().replace(/,/g, ''));
            });


            var GrandTOtalAmount = parseFloat(TotalAmounts2);
            var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
            var Comma1 = GrandTOtalAmount.toString().split(".");
            Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            $("#DisplayGrandTotal_Two").val(Comma1.join("."));


            var TotalAmounts3 = 0;
            // $("#VAT").each(function () {
            $("input[id*='item_DisplayTotalAmount_Three']").each(function () {
                TotalAmounts3 = TotalAmounts3 + parseFloat($(this).val().replace(/,/g, ''));
            });


            var GrandTOtalAmount = parseFloat(TotalAmounts3);
            var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
            var Comma1 = GrandTOtalAmount.toString().split(".");
            Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            $("#DisplayGrandTotal_Three").val(Comma1.join("."));


        })

        $("input[id*='item_DisplayAmount_One']").on('keyup', function () {
            var DisplayAmount_One = $(this).val().replace(/,/g, '');
            var row = $(this).closest("tr");
            var qty = $("input[id*='item_Qty']", row).val().replace(/,/g, '');



            if (qty != "" && DisplayAmount_One != "") {
                var subTotal = parseInt(qty) * parseFloat(DisplayAmount_One);

                if (!isNaN(subTotal)) {

                    var i = (subTotal).toFixed(2).toString();
                    var Comma2 = i.toString().split(".");
                    Comma2[0] = Comma2[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    //$("input[id*='TotalAmount']", row).val(Comma2.join("."));
                    $("#item_DisplayTotalAmount_One", row).val(Comma2.join("."));
                }
                var TotalAmounts = 0;
                // $("#VAT").each(function () {
                $("input[id*='item_DisplayTotalAmount_One']").each(function () {
                    TotalAmounts = TotalAmounts + parseFloat($(this).val().replace(/,/g, ''));
                });


                var GrandTOtalAmount = parseFloat(TotalAmounts);
                var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
                var Comma1 = GrandTOtalAmount.toString().split(".");
                Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $("#DisplayGrandTotal_One").val(Comma1.join("."));
            }
            else {

                $("input[id*='DisplayGrandTotal_One']").val((0).toFixed(2).toString());
                $("input[id*='item_DisplayTotalAmount_One']", row).val((0).toFixed(2).toString());
            }


        })

        $("input[id*='item_DisplayAmount_Two']").on('keyup', function () {
            var DisplayAmount_One = $(this).val().replace(/,/g, '');
            var row = $(this).closest("tr");
            var qty = $("input[id*='item_Qty']", row).val().replace(/,/g, '');



            if (qty != "" && DisplayAmount_One != "") {
                var subTotal = parseInt(qty) * parseFloat(DisplayAmount_One);

                if (!isNaN(subTotal)) {

                    var i = (subTotal).toFixed(2).toString();
                    var Comma2 = i.toString().split(".");
                    Comma2[0] = Comma2[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    //$("input[id*='TotalAmount']", row).val(Comma2.join("."));
                    $("#item_DisplayTotalAmount_Two", row).val(Comma2.join("."));
                }
                var TotalAmounts = 0;
                // $("#VAT").each(function () {
                $("input[id*='item_DisplayTotalAmount_Two']").each(function () {
                    TotalAmounts = TotalAmounts + parseFloat($(this).val().replace(/,/g, ''));
                });


                var GrandTOtalAmount = parseFloat(TotalAmounts);
                var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
                var Comma1 = GrandTOtalAmount.toString().split(".");
                Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $("#DisplayGrandTotal_Two").val(Comma1.join("."));
            }
            else {

                $("input[id*='DisplayGrandTotal_Two']").val((0).toFixed(2).toString());
                $("input[id*='item_DisplayTotalAmount_Two']", row).val((0).toFixed(2).toString());
            }


        })

        $("input[id*='item_DisplayAmount_Three']").on('keyup', function () {
            var DisplayAmount_One = $(this).val().replace(/,/g, '');
            var row = $(this).closest("tr");
            var qty = $("input[id*='item_Qty']", row).val().replace(/,/g, '');



            if (qty != "" && DisplayAmount_One != "") {
                var subTotal = parseInt(qty) * parseFloat(DisplayAmount_One);

                if (!isNaN(subTotal)) {

                    var i = (subTotal).toFixed(2).toString();
                    var Comma2 = i.toString().split(".");
                    Comma2[0] = Comma2[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    //$("input[id*='TotalAmount']", row).val(Comma2.join("."));
                    $("#item_DisplayTotalAmount_Three", row).val(Comma2.join("."));
                }
                var TotalAmounts = 0;
                // $("#VAT").each(function () {
                $("input[id*='item_DisplayTotalAmount_Three']").each(function () {
                    TotalAmounts = TotalAmounts + parseFloat($(this).val().replace(/,/g, ''));
                });


                var GrandTOtalAmount = parseFloat(TotalAmounts);
                var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
                var Comma1 = GrandTOtalAmount.toString().split(".");
                Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $("#DisplayGrandTotal_Three").val(Comma1.join("."));
            }
            else {

                $("input[id*='DisplayGrandTotal_Three']").val((0).toFixed(2).toString());
                $("input[id*='item_DisplayTotalAmount_Three']", row).val((0).toFixed(2).toString());
            }


        })

        $("#TableSupplierItemList").on("click", "#add", function () {

            var item_ParticularName = $("#item_ParticularName").val()
            var item_ItemMeasure = $("#item_ItemMeasure").val()
            var item_Qty = $("#item_Qty").val()

            if (item_ParticularName == "" || item_ItemMeasure == "" || item_Qty == "") {
                sweetAlert("Item row can't be empty.", "", "error");

                return false;
            }

            $('select#item_ParticularName').select2('destroy');


            var $newRow = $('#mainrow').clone(true).insertBefore('#mainrow');

            $('.pc', $newRow).val($('#item_ParticularName').val());

            //remove id attribute from new clone row
            $('#item_ParticularName,#item_ItemMeasure,#item_Qty,#item_DisplayAmount_One,#item_DisplayAmount_Two,#item_DisplayAmount_Three,#item_DisplayTotalAmount_One,#item_DisplayTotalAmount_Two,#item_DisplayTotalAmount_Three', $newRow);

            //clear select data
            $('#item_ParticularName').val("");
            $("#item_Qty").val("");
            $('#item_ItemMeasure').val("");
            $('#item_itemDescription').val("");
            $('#item_DisplayAmount_One').val('');
            $('#item_DisplayAmount_Two').val('');
            $('#item_DisplayAmount_Three').val('');
            $('#item_DisplayTotalAmount_One').val('0.00');
            $('#item_DisplayTotalAmount_Two').val('0.00');
            $('#item_DisplayTotalAmount_Three').val('0.00');
            $('select#item_ParticularName').select2();
            $("#item_ParticularName").prop('disabled', false);

        })

        $('#TableSupplierItemList').on('click', '#Remove', function () {
            var trIndex = $(this).closest("tr").index();
            var Discount = $("#Discount").val();
            var TypeofVAT = $("#TypeOfVat").val();
            var count = $('#TableSupplierItemList tbody tr').length;
            if (count > 1) {
                $(this).closest("tr").remove();

                //--------------------------------------------------------------------------------------------- RECALCULATE AFTER REMOVE TABLE ROW -----------------------------------------------------------------------//

                var TotalAmounts1 = 0;
                // $("#VAT").each(function () {
                $("input[id*='item_DisplayTotalAmount_One']").each(function () {
                    TotalAmounts1 = TotalAmounts1 + parseFloat($(this).val().replace(/,/g, ''));
                });

                if (TotalAmounts1 == "NaN") {
                    TotalAmounts1 = 0;
                }

                var GrandTOtalAmount = parseFloat(TotalAmounts1);
                var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
                var Comma1 = GrandTOtalAmount.toString().split(".");
                Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $("#DisplayGrandTotal_One").val(Comma1.join("."));



                var TotalAmounts2 = 0;
                // $("#VAT").each(function () {
                $("input[id*='item_DisplayTotalAmount_Two']").each(function () {
                    TotalAmounts2 = TotalAmounts2 + parseFloat($(this).val().replace(/,/g, ''));
                });

                if (TotalAmounts2 == "NaN") {
                    TotalAmounts2 = 0;
                }

                var GrandTOtalAmount = parseFloat(TotalAmounts2);
                var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
                var Comma1 = GrandTOtalAmount.toString().split(".");
                Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $("#DisplayGrandTotal_Two").val(Comma1.join("."));


                var TotalAmounts3 = 0;
                // $("#VAT").each(function () {
                $("input[id*='item_DisplayTotalAmount_Three']").each(function () {
                    TotalAmounts3 = TotalAmounts3 + parseFloat($(this).val().replace(/,/g, ''));
                });


                if (TotalAmounts3 == "NaN") {
                    TotalAmounts3 = 0;
                }
                var GrandTOtalAmount = parseFloat(TotalAmounts3);
                var GrandTOtalAmount = (GrandTOtalAmount).toFixed(2).toString();
                var Comma1 = GrandTOtalAmount.toString().split(".");
                Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $("#DisplayGrandTotal_Three").val(Comma1.join("."));



            } else {
                sweetAlert("Item row can't be empty.", "", "error");
                //alert("File Shouldn't Be Empty!!");
                return false;
            }
        });

        $("#RequestPRValidation").submit(function (e) {

            var validate = false;

            var PRNumber = $("#PRNumber").val();
            var PRReferenceNo = $("#PRReferenceNo").val();
            var ApproverID = $("#ApproverID").val();
            var EndorserID = $("#EndorserID").val();
            var CanvessedBy = $("#CanvessedBy").val();
            var DateNeeded = $("#PRDateNeeded").val();
            var ProjectDescription = $("#ProjectDescription").val();
            var SupplierID_One = $("#SupplierID_One").val();
            var SupplierID_Two = $("#SupplierID_Two").val();
            var SupplierID_Three = $("#SupplierID_Three").val();
            var DisplayGrandTotal_One = $("#DisplayGrandTotal_One").val();
            var DisplayGrandTotal_Two = $("#DisplayGrandTotal_Two").val();
            var DisplayGrandTotal_Three = $("#DisplayGrandTotal_Three").val();
            var Preview = $("#HiddenPreview").val();
            var PreparedID = myUserID;

            var PRMainList = new Array();

            $("#TableSupplierItemList tbody tr").each(function () {
                var row = $(this);



                var itemname = $("#ParticularName", row).val();
                if (itemname == "") {
                    validate = true;
                }
                var PrList = {};

                PrList.ParticularName = $("#item_ParticularName", row).val();
                PrList.ItemMeasure = $("#item_ItemMeasure", row).val();
                PrList.Qty = $("#item_Qty", row).val();
                PrList.itemDescription = $("#item_itemDescription", row).val();
                PrList.Amount_One = $("#item_DisplayAmount_One", row).val();
                PrList.TotalAmount_One = $("#item_DisplayTotalAmount_One", row).val();
                PrList.Amount_Two = $("#item_DisplayAmount_Two", row).val();
                PrList.TotalAmount_Two = $("#item_DisplayTotalAmount_Two", row).val();
                PrList.Amount_Three = $("#item_DisplayAmount_Three", row).val();
                PrList.TotalAmount_Three = $("#item_DisplayTotalAmount_Three", row).val();

                PRMainList.push(PrList);

            })

            if (DateNeeded == "" || CanvessedBy == "" || ProjectDescription == "" || validate == true) {
                return false;
            }

            var action = $(this).attr('action');

            e.preventDefault()
            e.stopImmediatePropagation();

            if (Preview == "SAVED") {
                var $this = $("#btnSavePR");
                $this.button('loading');
                setTimeout(function () {
                    $this.button('reset');
                }, 10000);
            }


            $.ajax({
                url: action,
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    PRMainList: PRMainList,
                    PRNumber: PRNumber,
                    PRReferenceNo: PRReferenceNo,
                    ApproverID: ApproverID,
                    CanvessedBy: CanvessedBy,
                    EndorserID: EndorserID,
                    DateNeeded: DateNeeded,
                    ProjectDescription: ProjectDescription,
                    SupplierID_One: SupplierID_One,
                    SupplierID_Two: SupplierID_Two,
                    SupplierID_Three: SupplierID_Three,
                    GrandTotalAmount_One: DisplayGrandTotal_One,
                    GrandTotalAmount_Two: DisplayGrandTotal_Two,
                    GrandTotalAmount_Three: DisplayGrandTotal_Three,
                    HiddenPreview: Preview,
                    PreparedID: PreparedID,
                }),
                dataType: "json",
                success: function (data) {

                    if (data == 'Information') {

                        sweetAlert("Please fill out required field.", "", "error");
                        return false;
                    }
                    else if (data == 'ItemGrid') {
                        sweetAlert("Please fill out empty field.", "", "error");
                        return false;
                    }
                    else if (data == 'RedirectLogin') {
                        sweetAlert("Your Session has been ended", "Please Refresh the page.", "error").then(function () {
                            // Redirect the user
                            location.reload();
                        });
                    }
                    else if (data == 'SuccessPreview') {

                        window.open("/Report/ReportPreviewPurchaseRequisition/");
                        var $this = $("#btnPreviewPR");
                        $this.button('loading');
                        setTimeout(function () {
                            $("#btnSavePR").prop('disabled', false);
                            $this.button('reset');
                        }, 5000);
                    }
                    else {
                        swal
                            ({
                                title: "Success",
                                text: data + " Item/s Successfully Added; and Purchase Requisition Successfully Saved.",
                                type: "success", allowOutsideClick: false
                            }).then(function () {

                                window.location.href = "/Report/PurchaseRequisitionReport/";

                            });



                    }
                }
            });

        })


    </script>

}
