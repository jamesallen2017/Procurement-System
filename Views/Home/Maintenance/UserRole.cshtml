@model PO_PurchasingUI.Models.UserMaintenance

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="hidden" value="113" id="ModuleAccess" />

<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-7">
            <h1 class="page-heading">
                USER ROLE MAINTENANCE <small></small>
            </h1>
        </div>
        <div class="col-sm-5 text-right hidden-xs">
            <ol class="breadcrumb push-10-t">
                <li>MAINTENANCE</li>
                <li>USER ROLE</li>
                <li><a class="link-effect" href="">VIEW</a></li>
            </ol>
        </div>
    </div>
</div>



<div class="content">
    <div class="block">
        <div class="block-content">

            @if (ViewBag.Tree == "false")
            {
                <div class="block-header">
                    <ul class="block-options">
                        <li>
                        </li>
                    </ul>
                    <h4 class="block-title">Date : @DateTime.Now.ToShortDateString()</h4>
                </div>
                using (Html.BeginForm("InsertModuleAccess", "Home", FormMethod.Post))
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(user => user.DepartmentID, Model.ListAllUserGroup, "", new { @class = "js-select2 form-control", style = "width:100%" })
                                @Html.HiddenFor(user => user.Department)
                                <label for="DepartmentID">Department</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(user => user.UserRoleID, Model.ListAllUserRole, "", new { @class = "js-select2 form-control", style = "width:100%" })
                                @Html.HiddenFor(user => user.UserRole)
                                <label for="UserRoleID">User Role</label>
                            </div>
                        </div>
                    </div>

                    <div id="jstree">
                    </div>

                    <div class="col-1" style="margin-top:50px">
                        <div class="form-group">
                            <input type="hidden" value="@ViewBag.Edit" name="edit" id="edit" />
                            <input type="hidden" name="selectedItems" id="selectedItems" />
                            <a href="@Url.Action("UserRole","Home")" class="btn btn-danger">Back</a>
                            <input type="submit" class="btn btn-primary" value="Save" />
                        </div>
                    </div>
                }
            }
            else if (ViewBag.Tree == "true")
            {
                <div class="row">
                    <div class="col-sm-6 col-md-4">
                        <a class="block block-link-hover3 text-center" href="@Url.Action("UserRoleCreate","Home")">
                            <div class="block-content block-content-full">
                                <div class="h1 font-w700 text-success"><i class="fa fa-plus"></i></div>
                            </div>
                            <div class="block-content block-content-full block-content-mini bg-gray-lighter text-success font-w600">Add New User Role</div>
                        </a>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel-body table-responsive">
                            <table class="table table-striped table-borderless text-center js-dataTable-full-pagination">
                                <thead>
                                    <tr>
                                        <th style="font-size: 12px;" class="text-center">edit</th>
                                        <th style="font-size: 12px;" class="text-center">Role</th>
                                        <th style="font-size: 12px;" class="text-center">Group</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.PopulateAllUserInformation)
                                    {
                                        <tr>
                                            <td style="font-size: 12px;" class="text-center"><a class="btn btn-primary" href="@Url.Action("UserRoleEdit","Home", new { @UserRoleID = item.UserRoleID, @DepartmentID = item.UserGroupID, @edit="true" })"><span class="fa fa-edit"></span></a></td>
                                            <td style="font-size: 12px;" class="text-center">@Html.DisplayFor(Modelitem => item.UserRole)</td>
                                            <td style="font-size: 12px;" class="text-center">@Html.DisplayFor(Modelitem => item.UserGroup)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
@if (ViewBag.Messages != null)
{
    <script type="text/javascript">
        window.onload = function () {
            sweetAlert("@ViewBag.HeadMessages", "@ViewBag.Messages", "error");
            return false;
            };  
    </script>
}

<script type="text/javascript">

    $("#DepartmentID").on('change', function () {
        var e2 = document.getElementById("DepartmentID");
        var DepartmentID = e2.options[e2.selectedIndex].text;
        var test2 = $("#Department").val(DepartmentID);
    })

    $("#UserRoleID").on('change', function () {
        var e1 = document.getElementById("UserRoleID");
        var UserRoleID = e1.options[e1.selectedIndex].text;
        var test = $("#UserRole").val(UserRoleID);
    })


    $(function () {
        var e1 = document.getElementById("UserRoleID");
        var UserRoleID = e1.options[e1.selectedIndex].text;

        var e2 = document.getElementById("DepartmentID");
        var DepartmentID = e2.options[e2.selectedIndex].text;

        var test = $("#UserRole").val(UserRoleID);
        var test2 = $("#Department").val(DepartmentID);

    
            $('#jstree').on('changed.jstree', function (e, data) {
                var i, j;
                var selectedItems = [];
                for(i = 0, j = data.selected.length; i < j; i++) {

                    //Fetch the Id.
                    var id = data.selected[i];

                    //Remove the ParentId.
                    if(id.indexOf('-') != -1){
                        id = id.split("-")[1];
                    }

                    //Add the Node to the JSON Array.
                    selectedItems.push({
                        text: data.instance.get_node(data.selected[i]).text,
                        id: id,
                        parent: data.instance.get_node(data.selected[i]).parent,
                    });
                }

                //Serialize the JSON Array and save in HiddenField.
                $('#selectedItems').val(JSON.stringify(selectedItems));
            }).jstree({
                 "core": {
                    "themes": {
                        "variant": "large",
                        "icons":false
                    },
                    "data": @Html.Raw(ViewBag.Json)
                    },
                "checkbox": {
                    "keep_selected_style": false,
                },
                "plugins": ["wholerow", "checkbox" , "ui"],

                }).bind("loaded.jstree", function (event, data) {
                    $('#jstree').jstree('check_node', 'li[selected=selected]');
                });
        });
</script>