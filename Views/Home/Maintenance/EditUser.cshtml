@model PO_PurchasingUI.Models.UserMaintenance
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Active",
        Value = "Active",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Deactivated",
        Value = "Deactivated",
    });
}
<input type="hidden" value="111" id="ModuleAccess" />

<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-7">
            <h1 class="page-heading">
                USER MAINTENANCE <small></small>
            </h1>
        </div>
        <div class="col-sm-5 text-right hidden-xs">
            <ol class="breadcrumb push-10-t">
                <li>MAINTENANCE</li>
                <li>USER</li>
                <li><a class="link-effect" href="">EDIT</a></li>
            </ol>
        </div>
    </div>
</div>
<!-- END Page Header -->

<div class="content">
    <div class="block">
        <div class="block-header">
            <ul class="block-options">
                <li>
                </li>
            </ul>
            <h4 class="block-title">Date : @DateTime.Now.ToShortDateString()</h4>
        </div>




        @if (ViewBag.EditUserMonitoring == true)
        {
            <div class="block-content">
                <div class="row">

                    @*<div class="col-xs-12 col-sm-12 col-md-6 col-md-offset-3">
                            <div class="form-material form-material-primary input-group remove-margin-t remove-margin-b">
                                <input class="form-control" type="text" autocomplete="off" id="txSearch" name="base-material-text" placeholder="Search..">
                                <span class="input-group-addon"><i class="si si-magnifier"></i></span>
                            </div>
                        </div>*@


                    <div class="col-md-12">
                        <div class="panel-body table-responsive">
                            <table class="table table-striped table-borderless text-center js-dataTable-full-pagination">
                                <thead>
                                    <tr>
                                        <th style="font-size: 12px;" class="text-center">edit</th>
                                        <th style="font-size: 12px;" class="text-center">Employee ID</th>
                                        <th style="font-size: 12px;" class="text-left">User Name</th>
                                        <th style="font-size: 12px;" class="text-left">Full Name</th>
                                        <th style="font-size: 12px;" class="text-left">Email Address</th>
                                        <th style="font-size: 12px;" class="text-center">Status</th>
                                        <th style="font-size: 12px;" class="text-center">Role</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.PopulateAllUserInformation)
                                    {
                                        <tr>
                                            <td style="font-size: 12px;" class="text-center"><a class="btn btn-primary" href="@Url.Action("EditUserForm","Home", new { @id = item.UserID })"><span class="fa fa-edit"></span></a></td>
                                            <td style="font-size: 12px;" class="text-center">@Html.DisplayFor(Modelitem => item.EmployeeID)</td>
                                            <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.UserName)</td>
                                            <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.FullName)</td>
                                            <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.EmailAddress)</td>
                                            @if (item.UserStatus == "Deactivated")
                                            {
                                                <td style="font-size: 12px;" class="text-center"><span class="label label-danger">@Html.DisplayFor(Modelitem => item.UserStatus)</span></td>

                                            }
                                            else if (item.UserStatus == "Active")
                                            {
                                                <td style="font-size: 12px;" class="text-center"><span class="label label-success">@Html.DisplayFor(Modelitem => item.UserStatus)</span></td>
                                            }
                                            <td style="font-size: 12px;" class="">@Html.DisplayFor(Modelitem => item.UserRole)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>


                </div>
            </div>
        }



        @if (ViewBag.EditUserForm == true)
        {


            using (Html.BeginForm("UpdateUserInformation", "Main", FormMethod.Post, new { @class = "js-validation-material form-horizontal push-10-t", @enctype = "multipart/form-data", id = "FormUser", name = "FormUser" }))
            {


            <div class="block-content block-content-narrow">
                @Html.HiddenFor(user => user.UserID)

                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.FirstName, new { @class = "form-control", autocomplete = "off", maxlength = "30" })
                                <label for="FirstName">First Name</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.LastName, new { @class = "form-control", autocomplete = "off", maxlength = "30" })
                                <label for="LastName">Last Name</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.UserName, new { @class = "form-control", autocomplete = "off", maxlength = "30"})
                                <label for="UserName">User Name</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.EmployeeID, new { @class = "form-control", autocomplete = "off", maxlength = "20" })
                                <label for="EmployeeID">Employee ID</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.Location, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                <label for="Location">Location</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.Position, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                <label for="Position">Position</label>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.TextBoxFor(user => user.EmailAddress, new { @class = "form-control", autocomplete = "off" })
                                <label for="EmailAddress">Email Address</label>
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(user => user.ApproverID, Model.ListAllApprover, "", new { @class = "js-select2 form-control", style = "width:100%" })
                                <label for="ApproverID">Approver</label>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(user => user.UserRoleID, Model.ListAllUserRole, "", new { @class = "js-select2 form-control", @onchange = "getUserGroup()", style = "width:100%" })
                                <label for="UserRoleID">User Role</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(user => user.UserGroupID, Model.ListAllUserGroup, "", new { @class = "js-select2 form-control", style = "width:100%" })
                                <label for="UserGroupID">Department</label>
                            </div>
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary floating">
                                @Html.DropDownListFor(x => x.UserStatus, listItems, "", new { @class = "js-select2 form-control", style = "width:100%" })
                                <label for="Approver">Status</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12">
                            <div class="form-material form-material-primary">
                                @Html.EditorFor(user => user.Img)
                                <input type="file" id="UserID" class="form-control" name="File" />
                                <label for="example-file-input" class="pull-right">Signature</label>
                            </div>
                        </div>
                    </div>

                </div>

               
                <div class="form-group">
                    <div class="col-xs-12">
                        <a class="btn btn-sm btn-danger pull-right" href="@Url.Action("EditUser","Home")">Back</a>
                        <input type="submit" name="btnSubmit" class="btn btn-sm btn-primary pull-right" style="margin-right:5px" id="btnSubmit" value="Submit" />
                        <a name="btnReset" class="btn btn-sm btn-success pull-right" id="btnResetPassword" style="margin-right:5px;">Reset Password</a>
                    </div>
                </div>
            </div>
            }

        }

    </div>
</div>




@section scripts {
    <!--FILTER USERGROUP DROPDOWNLIST-->

    @if (ViewBag.HeaderSuccess != null)
    {
        <script>

            var UserName = $("#UserName").val();
            swal
                ({
                    title: "Success",
                    text: "@ViewBag.HeaderSuccess Successfully Updated",
                    type: "success", allowOutsideClick: false


                }).then(function () {
                    // Redirect the user
                    window.location.href = "/Home/EditUser/";
                });

        </script>

    }

    <script>

        $("#FormUser").submit(function () {

            var UserName = $("#UserName").val().trim();
            var FirstName = $("#FirstName").val().trim();
            var EmployeeID = $("#EmployeeID").val().trim();
            var Location = $("#Location").val().trim();
            var Position = $("#Position").val().trim();
            var EmailAddress = $("#EmailAddress").val().trim();
            var ApproverID = $("#ApproverID").val().trim();
            var UserRoleID = $("#UserRoleID").val().trim();
            var UserGroupID = $("#UserGroupID").val().trim();

            
            if (UserName == "" || FirstName == "" || EmployeeID == "" ||
                Location == "" || Position == "" || EmailAddress == "" ||
                ApproverID == "" || DepartmentID == "" || 
                UserRoleID == "" || UserGroupID == "") {
                return false;
            }
            })

    </script>


    <script>
        $("body").on("click", "#btnResetPassword", function () {
            var UserID = $("#UserID").val();
            var Username = $("#UserName").val();
            var FirstName = $("#FirstName").val();
            var LastName = $("#LastName").val();
            var Fullname = FirstName + " " + LastName;
            var EmployeeID = $("#EmployeeID").val();
            swal({
                title: "Please confirm Reset Password?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#5F69E0',
                confirmButtonText: 'Confirm.',
                cancelButtonText: "No",
                closeOnConfirm: false, width: 420,
                closeOnCancel: false,
                allowOutsideClick: false
            }).then((isConfirm) => {
                if (isConfirm) {

                    var action = '/Home/UserResetPassword';
                    $.ajax({
                        url: action,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ Fullname: Fullname, UserID: UserID, EmployeeID: EmployeeID, Username: Username }),
                        dataType: "json",
                        success: function (data) {

                            if (data == 0) {
                                sweetAlert("Please contact our administrator for assistance!!", "Sorry for Inconvience", "error");
                                //alert("File Shouldn't Be Empty!!");
                                return false;
                            }
                            else {
                                swal
                                    ({
                                        title: "Success",
                                        text: "Reset Password Successful for  " + Fullname + "",
                                        type: "success"
                                    }).then(function () {
                                        // Redirect the user
                                        window.location.href = '/Home/EditUser/';

                                    });
                            }
                        }
                    });
                }
            })
        })

    </script>

    <!--FILTER USERGROUP DROPDOWNLIST-->


}
