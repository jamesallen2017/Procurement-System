@model PO_PurchasingUI.Models.SupplierModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> listItems = new List<SelectListItem>();

    listItems.Add(new SelectListItem
    {
        Text = "SALE INVOICE",
        Value = "SI",
        Selected = true

    });
    listItems.Add(new SelectListItem
    {
        Text = "BILLING STATEMENT",
        Value = "BS",
    });
}

<input type="hidden" value="91" id="ModuleAccess" />

<!-- Page Header -->
<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-7">
            <h1 class="page-heading">
                SUPPLIER'S PAYMENT <small></small>
            </h1>
        </div>
        <div class="col-sm-5 text-right hidden-xs">
            <ol class="breadcrumb push-10-t">
                <li>ACCOUNTING</li>
                <li><a class="link-effect" href="">PAYABLES</a></li>
            </ol>
        </div>
    </div>
</div>

<!-- END Page Header -->
@if (ViewBag.Payables == true)
{
    <div class="content">
        <div class="block animated fadeIn">
            <div class="block-header">
                <h4 class="block-title">Date : @DateTime.Now.ToShortDateString()</h4>
            </div>
            <div class="block-content">
                <div class="row">
                    @*<div class="col-xs-12 col-sm-12 col-md-6 col-md-offset-3">
                            <div class="form-material form-material-primary input-group remove-margin-t remove-margin-b">
                                <input class="form-control" type="text" autocomplete="off" id="txSearch" name="base-material-text" placeholder="Search..">
                                <span class="input-group-addon"><i class="si si-magnifier"></i></span>
                            </div>
                        </div>*@

                    <div class="col-md-12">
                        <div class="panel-body table-responsive">
                            <table id="TablePayables" class="table table-striped table-borderless text-center js-dataTable-full-pagination">
                                <thead>
                                    <tr>
                                        <th style="font-size:12px;" class="text-left">Add</th>
                                        <th style="font-size: 12px;" class="text-left col-md-1">PR No.</th>
                                        <th style="font-size: 12px;" class="text-left col-md-1">PO No.</th>
                                        <th style="font-size: 12px;" class="text-left">Supplier</th>
                                        <th style="font-size: 12px;" class="text-left">Project Name</th>
                                        <th style="font-size: 12px;" class="text-left">Payment Terms</th>
                                        <th style="font-size: 12px;" class="text-right">Total Amt.</th>
                                        <th style="font-size: 12px;" class="text-right">Balance</th>
                                        <th style="font-size: 12px;" class="text-center">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.PopulateSupplierDetails)
                                    {
                                    <tr>
                                        <td style="font-size: 12px;" class="text-left"><a class="btn btn-primary" id="btnPaid" href="@Url.Action("GETPAYABLES", "Home", new { @id = item.POSReferenceNo})"><span class="fa fa-plus"></span></a></td>
                                        <td style="font-size: 12px;" class="text-left col-md-1"><a href="@Url.Action("PurchaseRequisitionReport", "Report", new { @id = item.PRReferenceNo})">@Html.DisplayFor(Modelitem => item.PRNumber)</a></td>
                                        <td style="font-size: 12px;" class="text-left col-md-1">@Html.DisplayFor(Modelitem => item.POSupplierNumber)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.Supplier)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.ProjectName)</td>
                                        <td style="font-size: 12px;" class="text-left">@Html.DisplayFor(Modelitem => item.TermsofPayment)</td>
                                        <td style="font-size: 12px;" class="text-right">@Html.DisplayFor(Modelitem => item.DisplayGrandTotal)</td>
                                        <td style="font-size: 12px;" class="text-right">@Html.DisplayFor(Modelitem => item.ACC_BALANCE)</td>
                                        @if (item.ACC_Status == "FOR COLLECTION")
                                        {
                                            <td style="font-size: 12px;" class="text-center"><span class="label label-danger">@Html.DisplayFor(Modelitem => item.ACC_Status)</span></td>

                                        }
                                        else if (item.ACC_Status == "COLLECTED")
                                        {
                                            <td style="font-size: 12px;" class="text-center"><span class="label label-success">@Html.DisplayFor(Modelitem => item.ACC_Status)</span></td>
                                        }
                                        else if (item.ACC_Status == "FOR PAYMENT")
                                        {
                                            <td style="font-size: 12px;" class="text-center"><span class="label label-warning">@Html.DisplayFor(Modelitem => item.ACC_Status)</span></td>
                                        }
                                        @Html.HiddenFor(Modelitem => item.POSReferenceNo)
                                        @Html.HiddenFor(Modelitem => item.ACC_Status)
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (ViewBag.Payables == false)
{
    <div class="content">
        <div class="block animated fadeIn">
            <div class="block-header">
                <ul class="block-options">
                    <li>
                        <strong>@Html.DisplayFor(x => x.Supplier, new { @class = "form-control", disabled = "disabled", autocomplete = "off" }) - @Html.DisplayFor(x => x.ACC_Ponumber, new { @class = "form-control", disabled = "disabled", autocomplete = "off" })</strong>
                    </li>
                </ul>
                <h4 class="block-title">Date : @DateTime.Now.ToShortDateString()</h4>
            </div>
            <div class="block-content block-content-narrow">
                <div class="row">
                    @using (Html.BeginForm("insertAccountingPayables", "Main", FormMethod.Post, new { @id = "PayablesValidation", @class = "js-validation-material form-horizontal push-10-t", role = "form" }))
                    {
                        @Html.HiddenFor(a => a.ACC_Ponumber)
                        @Html.HiddenFor(a => a.POSReferenceNo)
                        @Html.HiddenFor(a => a.DisplayGrandTotal)
                        @Html.HiddenFor(a => a.Percentage)
                        @Html.HiddenFor(a => a.ACC_AmountPaidHidden)
                        @Html.HiddenFor(a => a.ACC_LesswithTaxHidden)
                        


                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary">
                                        @Html.DropDownListFor(accounting => accounting.SupplierPayment, Model.ListofSupplierPayment, "New Payment", new { @class = "js-select2 form-control", @onchange = "getPaymentDetails()", style = "margin: 0px; width: 100%; resize:vertical; height: 38px;" })
                                        <label for="ACC_CheckDate">Select Update Payment</label>
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.DropDownListFor(accounting => accounting.BillingType, Model.ListBillingType, "", new { @class = "js-select2 form-control", @onchange = "getBillAmount()", style = "margin: 0px; width: 100%; resize:vertical; height: 38px;" })
                                        <label for="ACC_CheckDate">Bill Type</label>
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_CheckDate, new { @class = "js-datepicker form-control", @readonly = "readonly", autocomplete = "off" })
                                        <label for="ACC_CheckDate">Check Date</label>
                                    </div>
                                </div>
                            </div>

                            @*<div class="form-group">
                    <div class="col-md-12">
                        <div class="form-material form-material-primary floating">
                            @Html.TextBoxFor(accounting => accounting.ACC_COCNO, new { @class = "form-control", autocomplete = "off", maxlength = "50", disabled = "disabled" })

                            <label for="ACC_COCNO">COC No.</label>
                        </div>
                    </div>
                </div>*@

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_DRNO, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        <label for="ACC_DRNO">DR No.</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_MRRNO, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        <label for="ACC_MRRNO">OR/CR No.</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_ATICVNO, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        <label for="ACC_ATICVNO">CV No.</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_InvoiceNo, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                                        <label for="ACC_InvoiceNo">Invoice No.</label>
                                    </div>
                                </div>
                            </div>

                        </div>


                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_DateCollected, new { @class = "js-datepicker form-control", @readonly = "readonly", autocomplete = "off" })
                                        <label for="ACC_CheckDate">Date Collected</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.DropDownListFor(accounting => accounting.TypeOfTerms, Model.ListofPaymentTerms, new { @class = "js-select2 form-control", style = "margin: 0px; width: 100%; resize:vertical; height: 38px;" })
                                        <label for="TypeOfTerms">Terms of Payment</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_Particular, new { @class = "form-control", maxlength = "150", autocomplete = "off" })
                                        <label for="ACC_Particular">Particulars</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div id="DivACC_LesswithTax" class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_LesswithTax, new { @class = "form-control", onkeypress = "validate(event)", autocomplete = "off", oncopy = "return false", onpaste = "return false", style = "text-align:right", maxlength = "50" })
                                        <label for="ACC_LesswithTax">Withholding Tax</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div id="DivACC_BillAmount" class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_AmountPaid, new { @class = "form-control", onkeypress = "validate(event)", autocomplete = "off", oncopy = "return false", onpaste = "return false", style = "text-align:right", maxlength = "50" })
                                        <label for="ACC_AmountPaid">Amount Paid</label>
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.Discount, new { @class = "form-control", autocomplete = "off", maxlength = "50", onkeypress = "validate(event)" })
                                        <label for="Discount">Less Discount</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="form-material form-material-primary floating">
                                        @Html.TextBoxFor(accounting => accounting.ACC_Responsible, new { @class = "form-control", disabled = "disabled" })
                                        <label for="ACC_Responsible">Responsible</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-xs-12">
                                    @if (Session["UserRole"].ToString() == "5")
                                    {
                                        <a class="btn btn-danger pull-right" style="margin-right:5px;" href="@Url.Action("PAYABLES","Home", new { @id2="71"})" onclick="window.history.back()">Back</a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-primary pull-right" type="submit">Submit</button>
                                        <a class="btn btn-danger pull-right" style="margin-right:5px;" href="@Url.Action("PAYABLES","Home", new { @id2="71"})" onclick="window.history.back()">Back</a>
                                    }

                                </div>
                            </div>
                        </div>

                    }
                </div>

            </div>
        </div>
    </div>
}


@section scripts
{
    @Scripts.Render("~/bundles/CreatePayables")
    <script>

        function getPaymentDetails() {

            var SupplierPayment = $("#SupplierPayment").val()
            var POSReferenceNo = $("#POSReferenceNo").val()

            if (SupplierPayment == "") {
                window.location.reload();
                return false;
            }
            else {
                window.location.href = '/Home/GetSupplierPaymentDetails/?id=' + SupplierPayment ;
            }

        }

        function getBillAmount() {
            var BillingType = $("#BillingType").val();
            var TypeOfTerms = $("#TypeOfTerms").val();
            var POSReferenceNo = $("#POSReferenceNo").val();

            if (BillingType == "") {
                $("#ACC_AmountPaid").val("0.00");
                return $("#ACC_LesswithTax").val("0.00");
                return false;
            }

            $.ajax({
                url: '/Home/GetBillingTypePayables/',
                method: 'POST',
                data: JSON.stringify({
                    BillingType: BillingType,
                    TypeOfTerms: TypeOfTerms,
                    POSReferenceNo: POSReferenceNo,
                }),
                contentType: "application/json",
                dataType: "json",
                success: function (data) {
                    $(data).each(function (index, data) {
                 

                        $('#DivACC_BillAmount').removeClass('form-material-primary floating')
                        $('#DivACC_BillAmount').addClass('form-material')

                        var parts = data.ACC_AmountPaid.toString().split(".");
                        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        $("#ACC_AmountPaid").val(parts.join("."));

                        var parts = data.ACC_AmountPaid.toString().split(".");
                        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        $("#ACC_AmountPaidHidden").val(parts.join("."));

                        $('#DivACC_LesswithTax').removeClass('form-material-primary floating')
                        $('#DivACC_LesswithTax').addClass('form-material')

                        var parts = data.ACC_LesswithTax.toString().split(".");
                        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        $("#ACC_LesswithTax").val(parts.join("."));

                        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        $("#ACC_LesswithTaxHidden").val(parts.join("."));
                        return false;

                    });



                },
                error: function (err) {
                    alert(err);
                }
            });

        }
    </script>


    <script>

        //$("input[id*='ACC_LesswithTax']").on('keyup', function () {
        //    var Tax = $(this).val();
        //    var Percentage = $("#Percentage").val();
        //    var AmountPaidHidden = $("#ACC_AmountPaid").val();
        //    var AmountPaid = AmountPaidHidden;
        //    if (Tax <= 0 || Tax == "") {

        //        var TotalAmountPaid = AmountPaidHidden;
        //        var GrandTotal = (TotalAmountPaid).toFixed(2).toString(); // SET 0 WITH 2 DECIMALS
        //        var Comma1 = GrandTotal.toString().split("."); // PUT PERIOD BETWEEN DECIMAL AND GRAND TOTAL AMOUNT
        //        Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","); // SET COMMA
        //        AmountPaid.val(Comma1.join("."));// RENDER GRAND TOTAL AMOUNT VALUE TO TEXTBOX ID

        //        return false;
        //    }

        //    if (TotalAmountPaid < 0) {
        //        $("#ACC_AmountPaid").val("0.00");
        //        return false;
        //    }

        //    var GrandTotal = (parseFloat(AmountPaid)).toFixed(2).toString(); // SET 0 WITH 2 DECIMALS
        //    var Comma1 = GrandTotal.toString().split("."); // PUT PERIOD BETWEEN DECIMAL AND GRAND TOTAL AMOUNT
        //    Comma1[0] = Comma1[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","); // SET COMMA
        //    $("#ACC_AmountPaid").val(Comma1.join("."));// RENDER GRAND TOTAL AMOUNT VALUE TO TEXTBOX ID

        //    return false;
        //})


        $("#TablePayables tbody").on('click',"#btnPaid", function () {
            var row = $(this).closest("tr");

            var Status = $("#item_ACC_Status", row).val();
            if (Status == "COLLECTED") {

                sweetAlert("PO is already collected", "", "error");
                return false;

            }

        })

    </script>

}


